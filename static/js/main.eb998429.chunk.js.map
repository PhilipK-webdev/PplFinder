{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","hooks/useLocalStorage.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","pages/Favorite/style.js","components/UserFavorite/style.js","components/UserFavorite/UserFavorite.js","pages/Favorite/Favorite.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","hooks/usePeopleFetch.js","index.js"],"names":["Text","styled","div","size","bold","children","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","e","labelPlacement","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","useLocalStorage","key","defaultValue","storageObject","useState","jsonValue","JSON","parse","getItem","initialValue","setValue","useEffect","undefined","removeItem","setItem","stringify","remove","useCallback","useStorage","window","localStorage","users","isLoading","hoveredUserId","setHoveredUserId","arrayValues","setArrayValues","usersState","setUsersState","favoriteId","setFavoriteId","userSaveFavorite","setUserSaveFavorite","console","log","length","handleMouseEnter","index","handleMouseLeave","setFavorite","user","boolean","userArray","indexUserExists","map","uuid","indexOf","login","splice","userObject","name","location","picture","large","push","target","temp","includes","spliceArr","forEach","val","indexVal","indexUser","nat","arr","filter","onMouseEnter","onMouseLeave","src","alt","title","first","last","email","street","number","city","country","onClick","IconButton","Home","Content","Header","Favorite","usersFavorite","getUser","setGetUsers","UserFavorite","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","useLocation","pathname","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","component","Link","to","AppRouter","setUsers","setIsLoading","fetchUsers","a","axios","get","response","newArrayOfUsers","data","results","usePeopleFetch","path","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.eb998429.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    // <Typography>\r\n    <S.Text size={size} bold={bold}>\r\n      {children}\r\n    </S.Text>\r\n    // </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div`\r\n`;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = (e) => {\r\n    onChange && onChange(e);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={isChecked}\r\n            onChange={handleChange}\r\n            color=\"primary\"\r\n            value={value}\r\n          />}\r\n        label={label}\r\n        labelPlacement=\"top\"\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n  padding:10px 10px;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import { useCallback, useState, useEffect } from \"react\";\r\n\r\nexport function useLocalStorage(key, defaultValue) {\r\n    return useStorage(key, defaultValue, window.localStorage);\r\n}\r\n\r\nfunction useStorage(key, defaultValue, storageObject) {\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = JSON.parse(storageObject.getItem(key));\r\n        if (jsonValue !== null) return jsonValue;\r\n        if (typeof initialValue === \"function\") {\r\n            return defaultValue();\r\n        } else {\r\n            return defaultValue;\r\n        }\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        if (value === undefined) {\r\n            return storageObject.removeItem(key);\r\n        }\r\n        storageObject.setItem(key, JSON.stringify(value));\r\n    }, [key, value, storageObject])\r\n\r\n    const remove = useCallback(() => setValue(undefined), []);\r\n    return [value, setValue, remove]\r\n}\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport * as S from \"./style\";\r\nimport { useLocalStorage } from \"hooks/useLocalStorage\";\r\n\r\nconst UserList = ({ users, isLoading }) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [arrayValues, setArrayValues] = useState([]);\r\n  const [usersState, setUsersState] = useState([]);\r\n  const [favoriteId, setFavoriteId, removeFavoriteId] = useLocalStorage(\"user\", \"\");\r\n  const [userSaveFavorite, setUserSaveFavorite] = useState();\r\n\r\n  useEffect(() => {\r\n    console.log(\"local storage\", favoriteId);\r\n    favoriteId.length ? setUserSaveFavorite([...favoriteId]) : setUserSaveFavorite([]);\r\n  }, [favoriteId])\r\n\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  const setFavorite = (user) => {\r\n    user.boolean = !user.boolean;\r\n    let userArray = userSaveFavorite;\r\n    let localstorage = favoriteId;\r\n    const indexUserExists = userArray.map(user => user.uuid).indexOf(user.login.uuid);\r\n\r\n    if (indexUserExists !== -1) {\r\n      userArray.splice(indexUserExists, 1);\r\n    } else {\r\n      let userObject = {\r\n        name: user.name,\r\n        location: user.location,\r\n        uuid: user.login.uuid,\r\n        boolean: user.boolean,\r\n        picture: user.picture.large\r\n\r\n      }\r\n      userArray.push(userObject);\r\n    }\r\n    console.log(\"userArray\", userArray);\r\n    setUserSaveFavorite([...userArray]);\r\n    setFavoriteId([...userArray]);\r\n  }\r\n\r\n  const onChange = useCallback((e) => {\r\n    const { value } = e.target;\r\n    let temp = [];\r\n    if (!arrayValues.includes(value)) {\r\n      let arr = [];\r\n      arr.push(value);\r\n      temp = users.filter((user, index) => {\r\n        if (user.nat === value) {\r\n          return user;\r\n        }\r\n      });\r\n      setUsersState([...usersState, ...temp]);\r\n      setArrayValues([...arrayValues, ...arr]);\r\n    } else {\r\n      let spliceArr = arrayValues;\r\n      const index = spliceArr.indexOf(value);\r\n      spliceArr.splice(index, 1);\r\n      spliceArr.forEach((val, indexVal) => {\r\n        users.forEach((user, indexUser) => {\r\n          if (val === user.nat) {\r\n            temp.push(user);\r\n          }\r\n        });\r\n      })\r\n      setArrayValues([...spliceArr]);\r\n      setUsersState([...temp]);\r\n    }\r\n  }, [usersState, arrayValues]);\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox value=\"BR\" label=\"Brazil\" onChange={onChange} />\r\n        <CheckBox value=\"AU\" label=\"Australia\" onChange={onChange} />\r\n        <CheckBox value=\"CA\" label=\"Canada\" onChange={onChange} />\r\n        <CheckBox value=\"DE\" label=\"Germany\" onChange={onChange} />\r\n      </S.Filters>\r\n      <S.List>\r\n        {usersState.length === 0 ? users.map((user, index) => {\r\n          return (\r\n            <S.User\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={handleMouseLeave}\r\n            >\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper isVisible={index === hoveredUserId || user.boolean}\r\n                onClick={() => setFavorite(user)}>\r\n                <IconButton>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n                <IconButton>\r\n                  <InfoIcon />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        }) : usersState.map((user, index) => {\r\n          return (\r\n            <S.User\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={handleMouseLeave}\r\n            >\r\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper isVisible={index === hoveredUserId || user.boolean}\r\n                onClick={() => setFavorite(user)}>\r\n                <IconButton>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n                <IconButton>\r\n                  <InfoIcon />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport * as S from \"./style\";\r\nconst Home = ({ users, isLoading }) => {\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} isLoading={isLoading} />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Favorite = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n  padding:10px 10px;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport * as S from \"./style\";\r\nimport { useLocalStorage } from \"hooks/useLocalStorage\";\r\n\r\nconst UserList = ({ users }) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  // const [arrayValues, setArrayValues] = useState([]);\r\n  // const [usersState, setUsersState] = useState([]);\r\n  // const [favoriteId, setFavoriteId, removeFavoriteId] = useLocalStorage(\"user\", \"\");\r\n  // const [userSaveFavorite, setUserSaveFavorite] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(users);\r\n  }, [])\r\n\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  const setFavorite = (user) => {\r\n    // user.boolean = !user.boolean;\r\n    // let userArray = userSaveFavorite;\r\n    // const indexUserExists = userArray.map(user => user.uuid).indexOf(user.login.uuid);\r\n    // if (indexUserExists !== -1) {\r\n    //   userArray.splice(indexUserExists, 1);\r\n    // } else {\r\n    //   let userObject = {\r\n    //     name: user.name,\r\n    //     location: user.location,\r\n    //     uuid: user.login.uuid,\r\n    //     boolean: user.boolean\r\n    //   }\r\n    //   userArray.push(userObject);\r\n    // }\r\n    // setUserSaveFavorite([...userArray]);\r\n    // setFavoriteId(userArray);\r\n  }\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.List>\r\n        {users?.map((user, index) => {\r\n          return (\r\n            <S.User\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={handleMouseLeave}\r\n            >\r\n              <S.UserPicture src={user.picture} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper isVisible={index === hoveredUserId || user.boolean}\r\n                onClick={() => setFavorite(user)}>\r\n                <IconButton>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { useLocalStorage } from \"hooks/useLocalStorage\";\r\nimport * as S from \"./style\";\r\nimport Text from \"components/Text\";\r\nimport UserFavorite from \"components/UserFavorite\";\r\nfunction Favorite() {\r\n    const [usersFavorite, setUsersFavorite, removeUsersFavorite] = useLocalStorage(\"user\", \"\");\r\n    const [getUser, setGetUsers] = useState();\r\n    useEffect(() => {\r\n        usersFavorite.length > 0 ? setGetUsers([...usersFavorite]) : setGetUsers([])\r\n    }, [])\r\n    return (\r\n        <S.Favorite>\r\n            <S.Content>\r\n                <S.Header>\r\n                    <Text size=\"64px\" bold>\r\n                        PplFavorite\r\n                    </Text>\r\n                </S.Header>\r\n                {usersFavorite.length ? <UserFavorite users={getUser} /> : null}\r\n                {/* <UserList users={users} isLoading={isLoading} /> */}\r\n            </S.Content>\r\n        </S.Favorite>\r\n    );\r\n\r\n}\r\n\r\nexport default Favorite","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst NavBar = () => {\r\n  const [value, setValue] = useState(0);\r\n  let location = useLocation();\r\n  useEffect(() => {\r\n    location.pathname === \"/\" ? setValue(0) : setValue(1)\r\n  }, [value])\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"static\" color=\"transparent\"\r\n      style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab\r\n          label=\"Home\"\r\n          index={0}\r\n          component={Link}\r\n          to={\"/\"} />\r\n        <Tab\r\n          label=\"Favorites\"\r\n          index={1}\r\n          component={Link}\r\n          to={\"/favorite\"}\r\n        />\r\n      </Tabs>\r\n    </AppBar >\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home, Favorite } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nconst AppRouter = () => {\r\n  const { users, isLoading } = usePeopleFetch();\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path=\"/favorite\">\r\n            <Favorite />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home users={users} isLoading={isLoading} />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\r\n    setIsLoading(false);\r\n    let newArrayOfUsers = response.data.results.map(user => {\r\n      user['boolean'] = false;\r\n      return user;\r\n    })\r\n    setUsers(newArrayOfUsers);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(\r\n    <AppRouter />,\r\n    document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}